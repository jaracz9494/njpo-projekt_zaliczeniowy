package projekt_zaliczeniowy;

import java.awt.Color;
import java.awt.Component;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Dominik
 */


public class Plansza extends javax.swing.JFrame {
    public int wartosc;
    
    public int typ() {
        
        return wartosc;
    }
    
    
    

    /**
     * Creates new form Plansza
     */
    public Plansza() {
        initComponents();
        grupa.add(Masztowiec1);
        grupa.add(Masztowiec2);
        grupa.add(Masztowiec3);
        grupa.add(Masztowiec4);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupa = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        Mapa = new javax.swing.JTable();
        Masztowiec1 = new javax.swing.JRadioButton();
        Masztowiec2 = new javax.swing.JRadioButton();
        Masztowiec3 = new javax.swing.JRadioButton();
        Masztowiec4 = new javax.swing.JRadioButton();
        Jednostki = new javax.swing.JLabel();
        Maszt1 = new javax.swing.JLabel();
        Maszt2 = new javax.swing.JLabel();
        Maszt3 = new javax.swing.JLabel();
        Maszt4 = new javax.swing.JLabel();
        test = new javax.swing.JTextField();
        test1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Mapa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"A", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"B", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"C", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"D", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"E", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"F", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"G", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"H", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"I", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"J", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"K", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"L", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"M", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"N", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22"
            }
        ));
        Mapa.setCellSelectionEnabled(true);
        Mapa.getTableHeader().setReorderingAllowed(false);
        Mapa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MapaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Mapa);
        if (Mapa.getColumnModel().getColumnCount() > 0) {
            Mapa.getColumnModel().getColumn(0).setMinWidth(20);
            Mapa.getColumnModel().getColumn(0).setMaxWidth(20);
            Mapa.getColumnModel().getColumn(1).setResizable(false);
            Mapa.getColumnModel().getColumn(2).setResizable(false);
            Mapa.getColumnModel().getColumn(3).setResizable(false);
            Mapa.getColumnModel().getColumn(4).setResizable(false);
            Mapa.getColumnModel().getColumn(5).setResizable(false);
            Mapa.getColumnModel().getColumn(6).setResizable(false);
            Mapa.getColumnModel().getColumn(7).setResizable(false);
            Mapa.getColumnModel().getColumn(8).setResizable(false);
            Mapa.getColumnModel().getColumn(9).setResizable(false);
            Mapa.getColumnModel().getColumn(10).setResizable(false);
            Mapa.getColumnModel().getColumn(11).setResizable(false);
            Mapa.getColumnModel().getColumn(12).setResizable(false);
            Mapa.getColumnModel().getColumn(13).setResizable(false);
            Mapa.getColumnModel().getColumn(14).setResizable(false);
            Mapa.getColumnModel().getColumn(15).setResizable(false);
            Mapa.getColumnModel().getColumn(16).setResizable(false);
            Mapa.getColumnModel().getColumn(17).setResizable(false);
            Mapa.getColumnModel().getColumn(18).setResizable(false);
            Mapa.getColumnModel().getColumn(19).setResizable(false);
            Mapa.getColumnModel().getColumn(20).setResizable(false);
            Mapa.getColumnModel().getColumn(21).setResizable(false);
            Mapa.getColumnModel().getColumn(22).setResizable(false);
        }

        Masztowiec1.setText("1-masztowiec");
        Masztowiec1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Masztowiec1ActionPerformed(evt);
            }
        });

        Masztowiec2.setText("2-masztowiec");
        Masztowiec2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Masztowiec2ActionPerformed(evt);
            }
        });

        Masztowiec3.setText("3-masztowiec");
        Masztowiec3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Masztowiec3ActionPerformed(evt);
            }
        });

        Masztowiec4.setText("4-masztowiec");
        Masztowiec4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Masztowiec4ActionPerformed(evt);
            }
        });

        Jednostki.setText("Jednostki");

        Maszt1.setText("3");

        Maszt2.setText("3");

        Maszt3.setText("3");

        Maszt4.setText("3");

        test.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 38, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Masztowiec1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Maszt1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Masztowiec3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Maszt3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Masztowiec2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(Jednostki))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Maszt2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Masztowiec4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Maszt4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(test, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(test1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Jednostki)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Masztowiec1)
                    .addComponent(Maszt1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Masztowiec2)
                    .addComponent(Maszt2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Masztowiec3)
                    .addComponent(Maszt3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Masztowiec4)
                    .addComponent(Maszt4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(test)
                    .addComponent(test1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Masztowiec1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Masztowiec1ActionPerformed
        Maszt1.setText("zmiana");
        wartosc=1;
    }//GEN-LAST:event_Masztowiec1ActionPerformed

    private void Masztowiec2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Masztowiec2ActionPerformed
        Maszt2.setText("zmiana");
        wartosc=2;
    }//GEN-LAST:event_Masztowiec2ActionPerformed

    private void Masztowiec3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Masztowiec3ActionPerformed
        Maszt3.setText("zmiana");
        wartosc=3;
    }//GEN-LAST:event_Masztowiec3ActionPerformed

    private void Masztowiec4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Masztowiec4ActionPerformed
        Maszt4.setText("zmiana");
        wartosc=4;
    }//GEN-LAST:event_Masztowiec4ActionPerformed

    private void MapaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MapaMouseClicked
        if (wartosc==0) {           
        } else {
            Mapa.setValueAt(wartosc, Mapa.getSelectedRow(), Mapa.getSelectedColumn());
            Mapa.setSelectionBackground(Color.red);
            //Mapa.getColumnModel().getColumn(4).setCellRenderer(new StatusColumnCellRenderer());
        }
        //test.setText(Integer.toString(Mapa.getSelectedRow()));
        test.setText(Mapa.getCellRenderer(2, 2).toString());
    }//GEN-LAST:event_MapaMouseClicked

    private void testActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_testActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Plansza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Plansza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Plansza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Plansza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Plansza().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Jednostki;
    private javax.swing.JTable Mapa;
    private javax.swing.JLabel Maszt1;
    private javax.swing.JLabel Maszt2;
    private javax.swing.JLabel Maszt3;
    private javax.swing.JLabel Maszt4;
    private javax.swing.JRadioButton Masztowiec1;
    private javax.swing.JRadioButton Masztowiec2;
    private javax.swing.JRadioButton Masztowiec3;
    private javax.swing.JRadioButton Masztowiec4;
    private javax.swing.ButtonGroup grupa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField test;
    private javax.swing.JLabel test1;
    // End of variables declaration//GEN-END:variables
public javax.swing.JLabel test2;
}
